/*********************************************************************************
  *Author:  San
  *IDE: Clion 2018.3
  *OS:  macOS High Sierra 10.13.6
  *Date:  August 17,2018
  *Description:  the basic use of noexcept()
  *
  *Bug:
  *Function List:
      1. void Throw(){ throw 1; }  // throw an exception
      2. void NoBlockThrow(){ Throw();  }  // call Throw()  会让异常继续抛出直到main中的catch语句将其捕捉a
      3. void BlockThrow()noexcept{ Throw(); }  // call Throw() 但是用noexcept修饰    会调用std::terminate中断程序的执行
  *History:
   1.Date:
     Author:
     Modification:
**********************************************************************************/
#include <algorithm>
#include <climits>
#include <cassert>
#include <cstdio>

#include <iostream>
#include <sstream>   // 内存输入输出  istringstream  ostringstream
#include <stdexcept>
#include <typeinfo>
#include <vector>
#include <queue>
#include <list>
#include <string>
#include <set>
#include <stack>
#include <queue>
#include <iterator>
#include <numeric>

using namespace std;

void Throw(){ throw 1; }  // throw an exception
void NoBlockThrow(){ Throw();  }  // call Throw()
void BlockThrow()noexcept{ Throw(); }  // call Throw()

template<class T>
void fun()noexcept(noexcept(T())){ }  // noexcept通常可以作用于模板

int main(int argc, char const *argv[]) {
    try{
        Throw();
    } catch(...){
        cout << "Found throw. " << endl;  // Found throw.
    }
    try{
        NoBlockThrow();
    } catch(...){
        cout << "Throw() is not blocked. " << endl;  // Throw is not blocked.
    }
    try{
        BlockThrow();  // terminate called after throwing an instance of 'int'
    }catch(...){
        cout << "Found throw 1. " << endl;
    }
}

Output:
Found throw. 
Throw() is not blocked. 
libc++abi.dylib: terminating with uncaught exception of type int
