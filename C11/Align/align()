/*********************************************************************************
  *Author:  San
  *IDE: Clion 2018.3
  *OS:  macOS High Sierra 10.13.6
  *Date:  August 21,2018
  *Description:  std::align() 动态根据指定的对齐方式调整数据块的位置
  *
  *Bug:
  *Function List:
  *  1.    void *align(std::size_t alignment,std::size_t size,void *&ptr,std::size_t& space);
  *        函数在ptr指向为space的内存中进行对齐方式调整，将ptr开始的size大小的数据调整为按alignment对齐
  *History:
   1.Date:
     Author:
     Modification:
**********************************************************************************/
#include <cstdlib>
#include <iostream>
#include <memory>
using namespace std;

struct alignas(alignof(double)*4)ColorVector {
    double r;
    double g;
    double b;
    double a;
};

int main(int argc, char const *argv[]) {
    size_t const size = 100;
    ColorVector * const vec = new ColorVector[size]; //将vec中的内容按alignof(double)*4的对齐值进行对齐
    void *p = vec;
    size_t sz = size;
    void *aligned = align(alignof(double)*4,size,p,sz); //将p指向为sz的内存中进行对齐方式调整，将p开始的size大小的数据调整为按alignof(double)*4对齐
    if(aligned != nullptr){
        cout << alignof(p) << endl;
    }
}
