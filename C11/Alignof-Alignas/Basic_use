/*********************************************************************************
  *Author:  San
  *IDE: Clion 2018.3
  *OS:  macOS High Sierra 10.13.6
  *Date:  August 21,2018
  *Description:  the basic use of alignof（对齐操作符） and alignas(alignment-specifier)对齐描述符 in C11
  *              alignas既可以接受常量表达式，也可以接受类型作为参数
  *Bug:
  *Function List:
  *  1.
  *History:
   1.Date:
     Author:
     Modification:
**********************************************************************************/
#include <cstdlib>
#include <iostream>
using namespace std;

//extern int area(int n)__attribute__((const ));

struct alignas(8) HowManyBytes{  //对齐到8字节的边界
    char a;
    int b;
};


class InComplete;
struct Completed{};

int main(int argc, char const *argv[]) {
    cout << "sizeof(HowManyBytes): " << sizeof(HowManyBytes) << endl;  // 8
    cout << "offset of char a: " << offsetof(HowManyBytes,a) << endl;  // 0 查询HowManyBytes中a的偏移量
    cout << "offset of int b: " << offsetof(HowManyBytes,b) << endl;   // 4

    // 使用C++11中的alignof来查询HowManyBytes的对齐方式
    cout << "alignof(HowManyBytes): " << alignof(HowManyBytes) << endl;  // (4->)8

    cout << alignof(Completed) << endl;  // 1
//         << alignof(InComplete) << endl  //can't compile, class Incomplete is an incomplete typedef

    alignas(double)char c;  // the same as " alignas(alignof(double))char c; "
}


