/*********************************************************************************
  *@copyright (C)  Sep 2018  San
  *@brief: chrono库主要包含3种类型：时间间隔duration、时钟clocks和时间点timepoint。
  * duration表示一段时间间隔，用来记录时间长度，可以表示几秒、几分钟或者几个小时的时间间隔。
  * duration的原型如下：template <
  * class Rep,class Period=std::ratio<1,1>
  * > class duration;第一个模板参数Rep是一个数值类型，表示时钟数的类型；第二个模板参数是一个默认模板参数std::ratio，表示时钟周期，
  *
  *@CMAKE_CXX_STANDARD 17
  *@IDE: Clion 2018.3
  *@OS:  macOS High Sierra 10.13.6
  *
  *@function_lists:
  *  1.

  *@history:
     1.Date:
       Author:
       Modification:
**********************************************************************************/
//chrono 还提供了获取时间间隔的时钟周期数的方法count();

#include <chrono>
#include <iostream>
#include <thread>
using namespace std;

int main(int argc, char const *argv[]) {
    chrono:: milliseconds ms(3);
    chrono:: microseconds us = 2*ms;
    chrono::duration<double, ratio<1,30>> hz30{ 3.5};
    cout << "3 ms duration has " << ms.count() << " ticks\n"   // 3 ms duration has 3 ticks
        << "6000 us furation has " << us.count() << " ticks\n";  // 6000 us furation has 6000 ticks
    
    chrono:: minutes t1(10);
    chrono:: seconds t2(60);
    chrono:: seconds t3 = t1 - t2;
    cout << t3.count() << " seconds" << endl;
}
}
