/*********************************************************************************
  *@copyright (C)  Aug 2018  San
  *@brief:   https://blog.csdn.net/gatieme/article/details/52557546
  *    扩展
  *    将无符号数转换为更大的数据类型时, 只需简单地在开头添加0，这种运算称为0扩展
  *    将有符号数转换为更大的数据类型需要执行符号扩展，规则是将符号位扩展至所需要的位数
  *
  *@CMAKE_CXX_STANDARD 17
  *@IDE: Clion 2018.3
  *@OS:  macOS High Sierra 10.13.6
  *
  *@function_lists:
  *  1.

  *@history:
     1.Date:
       Author:
       Modification:
**********************************************************************************/
#include <stdio.h>
#include <stdlib.h>

int main()
{
    printf("=======test1=======\n");
    //  如果是char, 那么系统认为最高位是符号位, 而int可能是16或者32位, 那么会对最高位进行扩展
    signed char c7_1 = 0x00ff; //int i7_1 = (int)c7_1;
    //  如果是unsigned char, 那么不会扩展.
    unsigned char c7_2 = 0x00ff; //int i7_2 = (int)c7_2;
    //  最高位若为0时, 二者没有区别, 若为1时，则有区别
    printf("signed   %08x, %d\n", c7_1, c7_1);
    printf("unsigned %08x, %d\n", c7_2, c7_2);
    
    printf("\n=======test high bit 1=======\n");
    //  最高位为1
    signed char cc1 = 0x80;
    unsigned char cc2 = 0x80;
    printf("signed   %08x, %d\n", cc1, cc1);
    printf("unsigned %08x, %d\n", cc2, cc2);

    printf("\n=======test high bit 0=======\n");
    //  最高位为0
    signed char cc3 = 0x7f;
    unsigned char cc4 = 0x7f;
    printf("signed   %08x, %d\n", cc3, cc3);
    printf("unsigned %08x, %d\n", cc4, cc4);
    
    return EXIT_SUCCESS;
}
