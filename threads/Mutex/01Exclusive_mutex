

/**
 * @date 2018-04-26
 * @brief std::mutex  独占互斥量
 * @note  IDE: Clion 2018.3   OS: macOS High Sierra
 * @author Sanner
 * @cite   C++14
 * @bug
  * History:  //修改历史记录列表，每条修改记录应包含修改日期、修改者及修改内容简介
     1.Date: 2018/06/02s
       Author: W
       Modification: Original
     2.…………
 */
 
 #include <chrono>
 #include <iostream>
 #include <mutex>
 #include <thread>
 
 using namespace std;

std::mutex g_lock;
void func(){
//    g_lock.lock();    //you have to use unlock if you use lock
//    cout<<"enter thread "<<this_thread::get_id() << endl;
//    this_thread::sleep_for(chrono::seconds(1));
//    cout<<"leaving thread "<<this_thread::get_id()<<endl;
//    g_lock.unlock();
    lock_guard<mutex> locker(g_lock);      //use lock_guard is safer
    cout<<"enter thread"<<this_thread::get_id()<<endl;
    this_thread::sleep_for(chrono::seconds(1));
    cout<<"leaving thread "<<this_thread::get_id()<<endl;
}

int main(){
    thread t1(func);
    thread t2(func);
    t1.join();
    t2.join();
    cout<<thread::hardware_concurrency()<<endl;   //calculate the kernel number of the CPU
}
