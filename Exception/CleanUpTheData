/*********************************************************************************
  *Author:  Sanner
  *IDE: Clion 2018.3
  *OS:  macOS 10.14
  *Processor: 2.2 GHz Intel Core i7
  *Graphics: Intel Iris Pro 1536 MB
  *Date:  Oct ,2018
  *Description:  This file used to show some basics of using the exception
  *              如果一个对象的构造函数在执行过程中抛出异常，那么这个对象的析构函数就不会被调用。
  *Others:
  *Function List:
     1.

  *History:  //modify history list, every record should consist the date, Revision and modification content introduction
     1.Date:
       Author:
       Modification:
     2.Date:
       Author:
       Modification:
**********************************************************************************/

#include <iostream>
#include <thread>
using namespace std;

class Trace {
public:
    Trace() {
        objid = counter++;
        cout << "conststructing Trace #" << objid << endl;
        if(objid == 3) throw 3;
    }
    ~Trace() {
        cout << "destructing Trace " << objid << endl ;
    }
private:
    static int counter;
    int objid;

};

int Trace::counter = 0;

int main(int argc, char const *argv[]) {
    try {
        Trace n1;   // conststructing Trace #0
        // Throws exception;
        Trace array[5];
        Trace n2;
    } catch (int i) {
        cout << "caught " << i << endl;
    }
}

Output:
conststructing Trace #0
conststructing Trace #1
conststructing Trace #2
conststructing Trace #3
destructing Trace 2
destructing Trace 1
destructing Trace 0
caught 3
